/**
 * 增强版混合器集合
 * 提供现代化的样式工具和向后兼容性
 */

@use 'sass:map';
@use 'variables' as *;

// ============================================================================
// 布局混合器
// ============================================================================

// Flexbox 布局快捷方式
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// Grid 布局
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-cols($cols, $gap: $space-4) {
  display: grid;
  grid-template-columns: repeat($cols, 1fr);
  gap: $gap;
}

// ============================================================================
// 响应式混合器（增强版）
// ============================================================================

@mixin responsive($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $value: map.get($breakpoints, $breakpoint);
    @if $value == 0 {
      @content;
    } @else {
      @media (min-width: $value) {
        @content;
      }
    }
  } @else {
    @warn "Breakpoint #{$breakpoint} not found in $breakpoints.";
  }
}

// 更简洁的别名
@mixin respond-to($breakpoint) {
  @include responsive($breakpoint);
}

// 特定断点范围
@mixin between($min, $max) {
  $min-value: map.get($breakpoints, $min);
  $max-value: map.get($breakpoints, $max);
  
  @if $min-value and $max-value {
    @media (min-width: $min-value) and (max-width: #{$max-value - 1px}) {
      @content;
    }
  }
}

// 只在特定断点以下
@mixin max-width($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value {
    @media (max-width: #{$value - 1px}) {
      @content;
    }
  }
}

// ============================================================================
// 玻璃效果混合器（增强版）
// ============================================================================

@mixin glass-effect($strength: medium, $blur: md) {
  $bg: $glass-bg-medium;
  $blur-value: $glass-blur-md;
  
  @if $strength == light {
    $bg: $glass-bg-light;
  } @else if $strength == strong {
    $bg: $glass-bg-strong;
  }
  
  @if $blur == sm {
    $blur-value: $glass-blur-sm;
  } @else if $blur == lg {
    $blur-value: $glass-blur-lg;
  } @else if $blur == xl {
    $blur-value: $glass-blur-xl;
  }
  
  background: $bg;
  backdrop-filter: blur($blur-value);
  -webkit-backdrop-filter: blur($blur-value);
  border: 1px solid $glass-border;
  box-shadow: 0 8px 32px $glass-shadow;
}

// 向后兼容的简化版本
@mixin glass {
  @include glass-effect(medium, md);
}

// ============================================================================
// 文本处理混合器
// ============================================================================

// 文本截断
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 文本阴影（增强可读性）
@mixin text-shadow($color: rgba(0, 0, 0, 0.3), $strength: light) {
  @if $strength == light {
    text-shadow: 0 1px 2px $color;
  } @else if $strength == medium {
    text-shadow: 0 1px 3px $color;
  } @else if $strength == strong {
    text-shadow: 0 2px 4px $color;
  }
}

// ============================================================================
// 过渡动画混合器
// ============================================================================

@mixin transition($property: all, $duration: normal, $timing: ease-out) {
  $duration-value: $duration-normal;
  $timing-function: $ease-out;
  
  // 时长映射
  @if $duration == instant {
    $duration-value: $duration-instant;
  } @else if $duration == fast {
    $duration-value: $duration-fast;
  } @else if $duration == slow {
    $duration-value: $duration-slow;
  } @else if $duration == slower {
    $duration-value: $duration-slower;
  } @else if type-of($duration) == number {
    $duration-value: #{$duration}ms;
  }
  
  // 缓动函数映射
  @if $timing == in {
    $timing-function: $ease-in;
  } @else if $timing == in-out {
    $timing-function: $ease-in-out;
  } @else if $timing == spring {
    $timing-function: $ease-spring;
  }
  
  transition: #{$property} #{$duration-value} #{$timing-function};
}

// 特定属性的过渡快捷方式
@mixin transition-transform($duration: normal, $timing: ease-out) {
  @include transition(transform, $duration, $timing);
}

@mixin transition-opacity($duration: normal, $timing: ease-out) {
  @include transition(opacity, $duration, $timing);
}

@mixin transition-colors($duration: normal, $timing: ease-out) {
  @include transition((color, background-color, border-color), $duration, $timing);
}

// ============================================================================
// 性能优化混合器
// ============================================================================

// 硬件加速
@mixin hardware-accelerate {
  will-change: transform;
  transform: translateZ(0);
}

// 硬件加速（特定属性）
@mixin will-change($properties...) {
  will-change: $properties;
}

// 图层促进
@mixin promote-layer {
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
}

// ============================================================================
// 定位混合器
// ============================================================================

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 全覆盖定位
@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// 固定定位全覆盖
@mixin fixed-fill {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// ============================================================================
// 交互状态混合器
// ============================================================================

// 悬停效果
@mixin hover-lift($distance: 2px, $shadow: lg) {
  @include transition(transform, fast, ease-out);
  
  &:hover {
    transform: translateY(-#{$distance});
    
    @if $shadow == sm {
      box-shadow: $shadow-sm;
    } @else if $shadow == md {
      box-shadow: $shadow-md;
    } @else if $shadow == lg {
      box-shadow: $shadow-lg;
    } @else if $shadow == xl {
      box-shadow: $shadow-xl;
    }
  }
}

// 焦点样式
@mixin focus-ring($color: $color-primary-400, $offset: 2px) {
  &:focus,
  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 #{$offset} rgba($color, 0.5);
  }
}

// 激活状态
@mixin active-scale($scale: 0.95) {
  &:active {
    transform: scale($scale);
    @include transition(transform, fast, ease-out);
  }
}

// ============================================================================
// 移动端优化混合器
// ============================================================================

// 触摸优化
@mixin touch-optimize {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  touch-action: manipulation;
}

// 安全区域内边距
@mixin safe-area-padding($sides: all) {
  @if $sides == all {
    padding-top: env(safe-area-inset-top);
    padding-right: env(safe-area-inset-right);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
  } @else if $sides == vertical {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
  } @else if $sides == horizontal {
    padding-right: env(safe-area-inset-right);
    padding-left: env(safe-area-inset-left);
  } @else if $sides == top {
    padding-top: env(safe-area-inset-top);
  } @else if $sides == bottom {
    padding-bottom: env(safe-area-inset-bottom);
  }
}

// 安全区域外边距
@mixin safe-area-margin($sides: all) {
  @if $sides == all {
    margin-top: env(safe-area-inset-top);
    margin-right: env(safe-area-inset-right);
    margin-bottom: env(safe-area-inset-bottom);
    margin-left: env(safe-area-inset-left);
  } @else if $sides == vertical {
    margin-top: env(safe-area-inset-top);
    margin-bottom: env(safe-area-inset-bottom);
  } @else if $sides == horizontal {
    margin-right: env(safe-area-inset-right);
    margin-left: env(safe-area-inset-left);
  } @else if $sides == top {
    margin-top: env(safe-area-inset-top);
  } @else if $sides == bottom {
    margin-bottom: env(safe-area-inset-bottom);
  }
}

// ============================================================================
// 无障碍访问混合器
// ============================================================================

// 屏幕阅读器专用文本
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// 高对比度模式适配
@mixin high-contrast-border($color: currentColor, $width: 1px) {
  @media (prefers-contrast: high) {
    border: $width solid $color;
  }
}

// 减少动画（用户偏好）
@mixin respect-motion-preference {
  @media (prefers-reduced-motion: reduce) {
    animation: none !important;
    transition: none !important;
  }
}

// ============================================================================
// 实用工具混合器
// ============================================================================

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 隐藏滚动条
@mixin hide-scrollbar {
  scrollbar-width: none; // Firefox
  -ms-overflow-style: none; // IE 10+
  
  &::-webkit-scrollbar {
    display: none; // Chrome, Safari, Opera
  }
}

// 自定义滚动条
@mixin custom-scrollbar($thumb-color: rgba(255, 255, 255, 0.3), $track-color: transparent) {
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
  
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $radius-full;
    
    &:hover {
      background: rgba($thumb-color, 0.8);
    }
  }
}
